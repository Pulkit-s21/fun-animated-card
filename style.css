/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  /* *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  } */
}

:root{
  --clr-neutral-900: hsl(207,19%,9%);
  --clr-neutral-100: hsl(0,0%,100%);
  --clr-accent-400: hsl(124,90%,71%);
}

/* global styling */

a{
  text-decoration: none;
}

/* general styling */

body{
  display: grid;
  /* grid-auto-flow: column; */
  place-items: center;
  min-height: 100vh;
  background-color: var(--clr-neutral-900);
  line-height: 1.6;
  font-family: sans-serif;
}

.card{
  color: var(--clr-neutral-100);
  background-image: url("https://images.unsplash.com/photo-1625805866449-3589fe3f71a3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80");
  background-size: cover;
  padding: 15rem 0 0;
  max-width: 35ch;
  border-radius: .5rem;
  overflow: hidden;

  transition: transform 300ms ease-in;
}

.card:hover,
.card:focus-within{
  transform: scale(1.05);
}

.card-content{
  --padding: 1.5rem;
  padding: var(--padding);
  background: linear-gradient(
    hsl(0 0% 0% / 0),
    hsl(0 0% 0% / .2) 20%,
    hsl(0 0% 0% / 1)
    );
}

/* so that if some1 uses keyboard on it then the text doesnt take too long to come in..not needed just for better use */
.card:focus-within .card-content > *:not(.card-title){
  transition-delay: 100ms;
}

.card-title{
  position: relative;
  width: max-content;
  margin: 0 0 1rem;
}

.card-title::after{
  content: '';
  position: absolute;
  height: 4px;
  background-color: var(--clr-accent-400);
  width: calc(100% + var(--padding));
  left: calc(var(--padding) * -1);
  bottom: -2px;
  transform-origin: left;

  transition: transform 400ms ease-in;
}

.card:hover .card-title::after,
.card:focus-within .card-title::after{
  transform: scaleX(1);
}

.card-body{
  color: rgb(255 255 255 /.75);
  margin-bottom: 1em;
}

@media (hover){
  .card-content{
    transform: translateY(65%);
    transition: transform 500ms ease-in;
  }

  .card:hover .card-content,
  .card:focus-within .card-content{
    transform: translateY(0);
    transition-delay: 500ms;
  }

  .card:focus-within .card-content{
    transition-duration: 0ms;
  }

  .card-content > *:not(.card-title){
    opacity: 0;
    transition: opacity 500ms linear;
  }

  .card:hover .card-content > *:not(.card-title),
  .card:focus-within .card-content > *:not(.card-title){
    opacity: 1;
    transition-delay: 400ms;
  }

  .card-title::after{
    transform: scaleX(0);
  }
}

.button{
  cursor: pointer;
  display: inline-block;
  padding: .25em 1.25em;
  color: var(--clr-neutral-900);
  background-color: var(--clr-accent-400);
  border-radius: .25em;
  transition: background-color 100ms ease-in-out;
  outline: none;
}

.button:hover,
.button:focus{
  background-color: var(--clr-neutral-100);
}